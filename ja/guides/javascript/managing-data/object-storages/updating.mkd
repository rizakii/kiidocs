---
layout: ja-doc
title: Object の更新
sort-priority: 30
summary: Kii Cloud SDK は、２種類の Object 更新手段を提供しています。
old-url: /jp/updating-objects--4
---
* **フルアップデート**： Object を完全に上書きします。

    今まで Object に保存されていた Key-Value が全て破棄された後に、新たに指定された Key-Value が Object に保存されます。
* **部分アップデート**： Object を部分的にアップデートします。

    Object が保存するKey-Valueのうち、新たに指定したKey-Valueのみが更新されます。それ以外のKey-Valueはそのまま保持されます。

Objectより一部のKey-valueペアのみ削除したい場合はフルアップデートを利用してください。（部分アップデートは、Key-Valueペアの削除をサポートしていません）

## フルアップデート

Objectをフルアップデートする例を以下にあげます。全てのKey-Valueペアをセット後に`saveAllFields`メソッドをコールすることで Object が完全に上書きされます。

```javascript
// Create/add new values
var object2 = KiiObject.objectWithURI(object.objectURI());
object2.set("myid", 1);
object2.set("name", "John Doe Jr");
object2.set("email", "john_jr@example.com");

// This will remove all key/value pairs on the server,
// replacing them with the locally-generated data
object2.saveAllFields({
  success: function(theObject) {
    console.log("Object saved!");
    console.log(theObject);
  },
  failure: function(theObject, errorString) {
    console.log("Error saving object: " + errorString);
  }
});
```

## 部分アップデート

Objectを部分アップする例を以下にあげます。更新するKey-Valueペアをセット後に`save`メソッドをコールすることで、Objectが部分的にアップデートされます。

```javascript
// Create/add new values
var object2 = KiiObject.objectWithURI(object.objectURI());
object2.set("myid", 1);
object2.set("name", "John Doe Jr");
object2.set("email", "john_jr@example.com");

// This will append the local key/value pairs to the data
// that already exists on the server
object2.save({
  success: function(theObject) {
    console.log("Object saved!");
    console.log(theObject);
  },
  failure: function(theObject, errorString) {
    console.log("Error saving object: " + errorString);
  }
});
```
