---
layout: ja-doc
title: イベントデータの解析
sort-priority: 20
summary: イベントデータ（Event Data）の解析を行う基本的なステップは以下の通りです。
old-url: /jp/--293
---
1. メトリクスを定義する。
1. アプリよりイベントデータを送信する。
1. 開発者ポータルで解析結果を確認する。
1. REST API で解析結果詳細を取得する。

以後、以下のサンプルシナリオを例に取り、実際に Event Data の解析を行う手順を解説していきます。

* アプリのインストール時に、以下のイベントデータを送信している（このイベントデータには "MyUser" という名前をつける者とする）
    * **"gender"** ... ユーザ性別を示す文字列 (M or F)
    * **"city"** ... ユーザが居住する都市を示す文字列 (San Francisco, Dallas, New York, ...)
    * **"location"** ... ユーザが居住する国を示す文字列 (UK, EU, JP, ...)
    * **"children"** ... ユーザの子供の数を示す整数値 (0, 1,2,3, ...)
    * **"age"** ... ユーザの年齢 (18, 20, 42, 44, ...)
* 集めたイベントデータを元に、以下のメトリクスを用いて解析を行いたい。
    * **メトリクス#1：** **"age"**の平均値を、**"city", "location", "gender"**および**"children"**毎に評価
    * **メトリクス#2：** イベントデータ総数を、**"gender", "city", "location", "children"**および**"age"**毎に評価

## 1. メトリクスを定義する

以下の手順でメトリクスを定義します。

1. 開発者ポータルにて、"Metrics" アイコンをクリック後、"Config" を選択します。
1. "Add" ボタンを押下します。
    ![](01.png)

    以下のように Aggregation Rules 定義画面が表示されます。

    ![](02.png)
1. "Name" セクションに Aggregation Rule の名前を入力します。
1. "Data" セクションの "Event Data" を選択します。
1. "Aggregated using" セクションに以下の情報を入力し、ファクトの集計方法を定義します。
    * **Aggregation function** : ファクトの集計方法。指定可能な集計関数は**Count**, **Avg** (平均), **Sum**, **Min**, **Max**のいずれかです。
    * **Field name** : ファクトとして集計するイベントデータのフィールド名。集計関数として Count を指定した場合、field name として"*" を指定することができます。
    * **Data type** : フィールド値のタイプ。指定可能なタイプは int, float, boolean, stringのいずれかです。

    <p class="note">現バージョンにおいては、マルチバイト文字はサポートされません。マルチバイト文字を含むフィールド名やマルチバイト値を持つフィールドを指定した場合、期待通りの結果が表示されないことがあります。</p>

1. "Filter by Type" セクションに、解析対象とするイベントデータのタイプを指定します。指定を省略した場合は、すべてのイベントデータが集計対象となります。
1. "Dimensions" セクションに以下の情報を入力し、集計に利用するディメンションを定義します。
    * **Label** : ディメンションの解析結果上におけるラベル。指定を省略した場合は、イベントデータのフィールド名がラベルとして適用されます。
    * **Name** : ディメンションとして利用するイベントデータのフィールド名。
    * **Type** : フィールドデータのタイプ。指定可能なタイプはint, float, boolean, stringのいずれかです。

    一例として、我々のサンプルシナリオにおけるメトリクス＃１は次のように定義します。

    ![](03.png)

    同様に我々のサンプルシナリオにおけるメトリクス＃２の指定方法を以下にあげます。この例では、集計関数として Count を指定しているため、集計対象フィールド名として "*" を指定しています。

    ![](04.png)

1. 設定が完了したら "Save" ボタンをクリックします。

    設定した Aggregation Rule が一覧に表示されますが、まだこの段階では有効になっていません。

    "Config" アイコンをクリックします。

    ![](05.png)

1. Aggregation Rules 設定画面が表示されます。ここで "Activate" ボタンをクリックします。

    ![](06.png)

1. Aggregation Rule が有効になり、インジケーターが緑色に変わります。

    ![](07.png)

    Aggregation Rule ID が表示されることを確認してください。後ほど解析結果の詳細を Android Analytics SDK 経由で取得する際にこの ID を利用します。

## 2. アプリよりイベントデータを送信する

イベントデータの送信方法は次の通りです。

1. `event`メソッドを用いて KiiEvent インスタンスを生成します。この際、必要に応じてイベントタイプを指定します。イベントタイプには "installed" や "level up" など任意の文字列を利用できます。我々のサンプルシナリオでは"MyUser" を使います。
1. `set`メソッドを用いて任意の key-value ペアをセットします。我々のサンプルシナリオでは "gender", "city", "location", "children", "age" をキーとして用います。
1. `push`メソッドでイベントデータをキャッシュします。Kii Analytics SDK は、キャッシュされたイベントデータを適切なタイミングで Kii Cloud にアップロードします。

イベントデータを送信するサンプルコードを以下にあげます。

```java
 // Create a KiiEvent instance
KiiEvent event = KiiAnalytics.event("MyUser");

// Set key-value pairs
event.set("gender", "M");
event.set("city", "San Francisco");
event.set("location", "US");
event.set("children", 2);
event.set("age", 35);

// Upload Event Data to Kii Cloud
try{
    event.push();
} catch (IOException e) {
    // Please check IOException to see what went wrong
}
```

## 3. 開発者ポータルで解析結果を確認する

開発者ポータルにて、次の操作を行います。

1. "Metrics" アイコンをクリック後、"Metrics" を選択肢ます。
1. 対象メトリクスを選択肢ます。

    以下のデフォルトビューが表示されます。

    ![](08.png)

    メトリクス名一覧のすぐ下に、ディメンションが表示されています。これらのうち１つをクリックすると、このディメンションにより分割されたビューが表示されます。

    一例として、ディメンション "Location" を選択した際のビューを以下にあげます。

    ![](09.png)

    解析結果をさらに絞り込む方法を次に示します。

    1. 左下に表示されているテーブルの行をクリックすることで、対象データのオン/オフができます。次の例では、トップ３アイテム（"UK", "IN", and "US"） を無効化しています。
        ![](10.png)

    1. さらに別ディメンションを用いたフィルタをかけることもできます。"Filters" の下の "None" というボタンを押下し、表示されるプルダウンメニューより新たなフィルタを定義します。

        次の例では、"age" の値が 22 であるデータに解析結果を絞り込んでいます。

        ![](11.png)

## 4. REST API を用いて解析詳細結果を取得する

REST API を使うと、以下の２つのフォーマットで解析結果詳細を取得できます。

* Tabular Result: ファクトが、各ディメンションの組み合わせ毎に集計された形で返されます。
* Grouped Result: ファクトが、指定したディメンションで分割された形で返されます。

### Tabular Result

以下に、Tabular Result を取得する例をあげます。ここでは、2012-12-01 から 2013-01-31 までの集計結果を取得しています。

```
  -H 'Authorization: {ACCESS_TOKEN}' \
  -H 'X-Kii-AppID: {APP_ID}' \
  -H 'X-Kii-AppKey: {APP_KEY}' \
  -H 'Accept: application/vnd.kii.TabularAnalyticResult+json' \
  "https://qa21.internal.kii.com/api/apps/{APP_ID}/analytics/{AGGREGATION_RULE_ID}/data?startDate=2012-12-1&endDate=2013-1-31"
```

Kii Cloud は次のように集計結果を返します。

```javascript
{
  "labels" : [ {
    "label" : "Gender",
    "type" : "DIMENSION"
  }, {
    "label" : "City",
    "type" : "DIMENSION"
  }, {
    "label" : "Location",
    "type" : "DIMENSION"
  }, {
    "label" : "No. Of Children",
    "type" : "DIMENSION"
  }, {
    "label" : "Age",
    "type" : "DIMENSION"
  }, {
    "label" : "Count",
    "type" : "FACT"
  } ],
  "snapshots" : [ {
    "createdAt" : 1357862400000,
    "data" : [ [ "M", "San Francisco", "US", 1, 40, 1 ],  (...snip...)  , [ "F", "Tokyo", "JP", 2, 39, 2 ] ]
  }, {
    "createdAt" : 1357948800000,
    "data" : [ [ "F", "New York", "US", 3, 35, 2 ],  (...snip...)  , [ "F", "Kyoto", "JP", 0, 18, 1 ] ]

  (... snip ...)

  } ]
}
```

リクエスト時に、フィルタ（e.g,. "Age" が 22 であるデータのみを対象とした集計を実施）を指定して取得解析結果の絞り込みを行うこともできます。指定方法などの詳細については、[REST API 詳細ドキュメント]({% page_url references-ja %})を参照してください。

### Grouped Result

以下に、Grouped Result を取得する例をあげます。ここでは、ディメンションとして "Location" を指定の上、 2012-12-01 から 2013-01-31 までの集計結果を取得しています。

```sh
curl -v -X GET
  -H 'Authorization: {ACCESS_TOKEN}' \
  -H 'X-Kii-AppID: {APP_ID}' \
  -H 'X-Kii-AppKey: {APP_KEY}' \
  -H 'Accept: application/vnd.kii.GroupedAnalyticResult+json' \
  "https://qa21.internal.kii.com/api/apps/{APP_ID}/analytics/{AGGREGATION_RULE_ID}/data?startDate=2012-12-1&endDate=2013-1-31&Group=Location"
```

Kii Cloud は次のように集計結果を返します。

```javascript
{
  "snapshots" : [ {
    "name" : "New York",
    "data" : [ 10, 10, 11,  (...snip...)   , 12 ],
    "pointStart" : 1357862400000,
    "pointInterval" : 86400000
  }, {
    "name" : "Tokyo",
    "data" : [ 5, 8, 10,  (...snip...)   , 15],
    "pointStart" : 1357862400000,
    "pointInterval" : 86400000
 }, {

  (... snip ...)

  } ]
}
```

リクエスト時に、フィルタ（e.g,. "Age" が 22 であるデータのみを対象とした集計を実施）を指定して取得解析結果の絞り込みを行うこともできます。指定方法などの詳細については、[REST API 詳細ドキュメント]({% page_url references-ja %})を参照してください。
