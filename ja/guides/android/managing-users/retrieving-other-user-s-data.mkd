---
layout: ja-doc
title: 他ユーザの情報を取得
sort-priority: 70
summary: ユーザのユーザ名、メールアドレス、もしくは電話番号を指定することで、該当ユーザの情報にアクセスすることができます。
old-url: /jp/--278
---
Kii Cloud が返すユーザ情報の内容は、アプリケーションの設定により決まります。アプリケーション設定の "Expose Full User Data to Others" オプションがオンの場合、ユーザの全情報が返されます。オプションがオフの場合、以下の情報のみが返されます。

 * UserID
 * LoginName
 * DisplayName

## "Expose Full User Data to Others" オプションのオン/オフ

開発者ポータル上で、以下の操作を行なってください。

1. "Edit" ボタンをクリックし、アプリケーションコンソールを開きます。

    ![](01.png)

2. "Settings" をクリックしアプリ設定画面を開いた後、"User Management" を選択します。
3. "Expose Full User Data To Others" オプションをオン/オフします。

    ![](02.png)

## 他ユーザ情報の取得

###ユーザ名を指定してユーザ情報を取得

ユーザ名指定によるユーザ情報取得の例を以下にあげます。

```java
String username = "user_123456";

try{
  KiiUser found = KiiUser.findUserByUsername(username);
} catch (IOException e){
  // Please check IOException to see what went wrong...
} catch (AppException e){
  // Please check AppException to see what went wrong...
}
```

###メールアドレスを指定してユーザ情報を取得

メールアドレス指定によるユーザ情報取得の例を以下にあげます。指定するメールアドレスは認証済である必要があります。

```java
String email_address = "user_123456@example.com";

try{
  KiiUser found = KiiUser.findUserByEmail(email_address);
} catch (IOException e){
  // Please check IOException to see what went wrong...
} catch (AppException e){
  // Please check AppException to see what went wrong...
}
```

###電話番号を指定してユーザ情報を取得:

電話番号指定によるユーザ情報取得の例を以下にあげます。指定する電話番号は認証済である必要があります。

なお、電話番号は、+と国コードから始まる国際電話番号で指定してください。

```java
String phone_number = "+819012345678";

try{
  KiiUser found = KiiUser.findUserByPhone(phone_number);
} catch (IOException e){
  // Please check IOException to see what went wrong...
} catch (AppException e){
  // Please check AppException to see what went wrong...
}
```
