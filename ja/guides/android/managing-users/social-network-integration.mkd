---
layout: ja-doc
title: 外部サービス（Facebook）連携
page-id: android-social_network_integration-ja
sort-priority: 30
old-url: /jp/social-network-integration--5
---
外部サービス連携を利用すると、外部サービス経由で Kii Cloud にサインアップ・サインインすることができます。例えば既に Facebook のアカウントを持つユーザに対して、このアカウント経由でサインアップやサインインを提供する事が可能になります。

現時点において、Kii Platform は Facebook との連携をサポートしています。また、以下の2つの外部サービスとの連携も近日中にサポートを予定しています。

 * Twitter： [http://www.twitter.com/](http://www.twitter.com/)
 * RenRen（人人）： [http://www.renren.com/](http://www.renren.com/)


##外部サービスと Kii Platform の連携

最初のステップとして、外部サービスと Kii Platform の連携を設定する必要があります。これは以下の手順にしたがって開発者ポータル上で行います。

1. アプリケーションコンソール上で "Edit" ボタンをクリックします。

    ![](01.png)

2. "Settings" をクリックしアプリ設定画面を開きます。
3. Facebook App ID を設定します。

    ![](02.png)

##外部アカウントを利用したサインイン

Facebook アカウントを利用してサインインする例を以下に示します。

```java
Activity activity = this.getActivity();
KiiSocialConnect conn = Kii.socialConnect(SocialNetwork.FACEBOOK);
conn.logIn(activity, null, new KiiSocialCallBack(){
  @Override
  public void onLoginCompleted(SocialNetwork network, KiiUser user, Exception exception) {
    if (exception == null) {
      // Success.
    } else {
      // Failure. handle error.
    }
  }
});
```

基本手順は以下の通りです。

1. 外部ソーシャル・ネットワークを利用したサインインを制御する Activity を作成します。
2. ソーシャル・ネットワークコネクターのインスタンスを `socialConnect` メソッドで生成します。この際、ターゲットとなるソーシャル・ネットワークを引数で指定します（今回の例では `SocialNetwork.Facebook` を指定）。
3. `logIn` メソッドを実行してサインインを開始します。このメソッドは非同期で実行され、コールバックで結果が通知されます。

**注意**: さらに、以下の例のように Facebook 認証を完了するためのコードを `onActivityResult` にアクティビティに追加する必要があります。

```java
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    Kii.socialConnect(SocialNetwork.FACEBOOK).respondAuthOnActivityResult(
	    requestCode,
	    resultCode,
	    data);
}
```

##既存 Kii アカウントを外部アカウントとリンク

すでに存在する Kii Cloud のユーザと外部アカウントをリンクさせることもできます。リンクさせることにより、ユーザは外部アカウントの認証を行うことによって Kii Cloud にサインインできるようになります。

```java
Activity activity = this.getActivity();
KiiSocialConnect conn = Kii.socialConnect(SocialNetwork.FACEBOOK);
conn.link(activity, null, new KiiSocialCallBack(){
  @Override
  public void onLinkCompleted(SocialNetwork network, KiiUser user, Exception exception) {
    if (exception == null) {
      // Success.
    } else {
      // Failure. handle error.
    }
  }
});
```

基本手順は以下の通りです。

1. 外部ソーシャル・ネットワークを利用したサインインを制御する Activity を作成します。
2. ソーシャル・ネットワークコネクターのインスタンスを `socialConnect` メソッドで生成します。この際、ターゲットとなるソーシャル・ネットワークを引数で指定します（今回の例では `SocialNetwork.Facebook` を指定）。
3. `link` メソッドを実行して、現在サインイン中のユーザと外部アカウントをリンクします。このメソッドは非同期で実行され、コールバックで結果が通知されます。


##既存 Kii アカウントと外部アカウントのリンク解除

Kii Cloud のユーザアカウントと外部アカウントのリンクを解除する例を以下に示します。

```java
Activity activity = this.getActivity();
KiiSocialConnect conn = Kii.socialConnect(SocialNetwork.FACEBOOK);
conn.unlink(activity, null, new KiiSocialCallBack(){
  @Override
  public void onUnLinkCompleted(SocialNetwork network, KiiUser user, Exception exception) {
    if (exception == null) {
      // Success.
    } else {
      // Failure. handle error.
    }
  }
});
```

1. 外部ソーシャル・ネットワークを利用したサインインを制御する Activity を作成します。
2. ソーシャル・ネットワークコネクターのインスタンスを `socialConnect` メソッドで生成します。この際、ターゲットとなるソーシャル・ネットワークを引数で指定します（今回の例では `SocialNetwork.Facebook` を指定）。
3. `unlink` メソッドを実行して、現在サインイン中のユーザと外部アカウントとのリンクを解除します。このメソッドは非同期で実行され、コールバックで結果が通知されます。
