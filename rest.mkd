---
layout: rest-api
title: Kii Cloud REST API overview
tags: rest-api
page-id: references-rest-en
page-section-id: rest-overview
---
## Application

Application represents an application on Kii Cloud.

See also: {% page_link rest-guides-en %} ([日本語]({% page_url rest-guides-ja %}))

Resource                                                 |Method |Description
---------------------------------------------------------|-------|-----------
[/apps/{appID}](/rest/apps-collection/application/#Get)  |Get    |Retrieve the properties of the application being accessed
[/apps/{appID}](/rest/apps-collection/application/#Post) |Post   |Modify the properties application being accessed

## ACL

This is the Access Control List of the parent resource. An ACL entry is composed by resource + verb + subject, indicates a permission (verb) that can be granted or revoked to a subject over a resource. The resources that have ACLs in Kii Platform are applications, users, groups, buckets, objects and topics, for each of them applies different verbs. A subject can be either a user or a group.

See also: {% page_link rest-managing_buckets-en %} ([日本語]({% page_url rest-managing_buckets-ja %}))

Resource                                                                                                         |Method |Description
-----------------------------------------------------------------------------------------------------------------|-------|-----------
[/apps/{appID}/acl](/rest/apps-collection/application/acl/#method-aclResourceType-GET)                                                      |Get    |Retrieve the complete ACL of the resource
[/apps/{appID}/acl/{ACLVerb}](/rest/apps-collection/application/acl/acl-verb/#method--GET)                                   |Get    |Retrieve the ACL entries for the current verb (permission)
[/apps/{appID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/acl/acl-verb/group-id/#method--GET) |Get    |Check if this group has granted the verb for the accessed resource
[/apps/{appID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/acl/acl-verb/group-id/#method--PUT) |Put    |Grant to this group the verb on the accessed resource
[/apps/{appID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource
[/apps/{appID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/acl/acl-verb/user-id/#method--GET)    |Get    |Check if this user has granted the verb for the accessed resource
[/apps/{appID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/acl/acl-verb/user-id/#method--PUT)    |Put    |Grant to this user the verb on the accessed resource
[/apps/{appID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/acl/acl-verb/user-id/#method--DELETE)    |Delete |Revoke the user the accessed verb on the resource

## Analytics

Analytics resource allow you to get analytics results

See also: {% page_link rest-managing_analytics-en %} ([日本語]({% page_url rest-managing_analytics-ja %}))

Resource                                                                                            |Method |Description
----------------------------------------------------------------------------------------------------|-------|-----------
[/apps/{appID}/analytics/{ruleID}/data](/rest/apps-collection/application/analytics/-ruleid--data/#method--GET) |Get    |Retrieve analytics result in grouped format. This format is used when media type is unspecified, */* or application/json
[/apps/{appID}/analytics/{ruleID}/data](/rest/apps-collection/application/analytics/-ruleid--data/#method--GET) |Get    |Retrieve analytics result in tabular format


## Bucket Collection

This resource represents a bucket collection. The buckets can be created in different scopes:

    APP
    USERS
    GROUPS
    
See also: {% page_link rest-managing_buckets-en %} ([日本語]({% page_url rest-managing_buckets-ja %}))

Bucket of default type
Access a bucket of the default backend type. This is the same than default:{bucketID} 

Resource                                                        |Method |Description
----------------------------------------------------------------|-------|-----------
[/apps/{appID}/buckets/{bucketID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/buckets/{bucketID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/buckets/{bucketID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/buckets/{bucketID}/acl](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/#method--GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/buckets/{bucketID}/objects](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time.
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/buckets/{bucketID}/query](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 

Bucket of specified type.
Access a bucket of the specified backend type

Resource                                                        |Method |Description
----------------------------------------------------------------|-------|-----------
[/apps/{appID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time. 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/buckets/{bucketType}:{bucketID}/query](/rest/apps-collection/application/bucket-collection/bucket-of-specified-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 

## Configuration

This resource is used to configure special settings in the application. 

See also: {% page_link rest-admin_features-en %} ([日本語]({% page_url rest-admin_features-ja %}))

Resource                                                                                         |Method |Description
-------------------------------------------------------------------------------------------------|-------|-----------
[/apps/{appID}/configuration/apns/development-certificate](/rest/apps-collection/application/configuration/apns/development-certificate/#method--PUT) |Put |Set or change the development certificate. 
[/apps/{appID}/configuration/apns/development-certificate](/rest/apps-collection/application/configuration/apns/development-certificate/#method--GET) |Get |Get the development certificate. 
[/apps/{appID}/configuration/apns/development-certificate](/rest/apps-collection/application/configuration/apns/development-certificate/#method--DELETE) |Delete |Delete the development certificate. 
[/apps/{appID}/configuration/apns/development-certificate/info](/rest/apps-collection/application/configuration/apns/development-certificate/development-certificate-information/#method--GET) |Get |Get the development certificate information. 
[/apps/{appID}/configuration/apns/development-password](/rest/apps-collection/application/configuration/apns/development-password/#method--PUT) |Put |Set or change the development password. 
[/apps/{appID}/configuration/apns/development-password](/rest/apps-collection/application/configuration/apns/development-password/#method--GET) |Get |Get the development password. 
[/apps/{appID}/configuration/apns/development-password](/rest/apps-collection/application/configuration/apns/development-password/#method--DELETE) |Delete |Delete the development password. 
[/apps/{appID}/configuration/apns/production-certificate](/rest/apps-collection/application/configuration/apns/production-certificate/#method--PUT) |Put |Set or change the production certificate. 
[/apps/{appID}/configuration/apns/production-certificate](/rest/apps-collection/application/configuration/apns/production-certificate/#method--GET) |Get |Get the production certificate. 
[/apps/{appID}/configuration/apns/production-certificate](/rest/apps-collection/application/configuration/apns/production-certificate/#method--DELETE) |Delete |Delete the production certificate. 
[/apps/{appID}/configuration/apns/production-certificate/info](/rest/apps-collection/application/configuration/apns/production-certificate/production-certificate-information/#method--GET) |Get |Get the production certificate information. 
[/apps/{appID}/configuration/apns/production-password](/rest/apps-collection/application/configuration/apns/production-password/#method--PUT) |Put |Set or change the production password. 
[/apps/{appID}/configuration/apns/production-password](/rest/apps-collection/application/configuration/apns/production-password/#method--GET) |Get |Get the production password. 
[/apps/{appID}/configuration/apns/production-password](/rest/apps-collection/application/configuration/apns/production-password/#method--DELETE) |Delete |Delete the production password. 
[/apps/{appID}/configuration/gcm](/rest/apps-collection/application/configuration/gcm/#method-gcmResourceType-PUT) |Put |Set or change the GCM key. 
[/apps/{appID}/configuration/gcm](/rest/apps-collection/application/configuration/gcm/#method-gcmResourceType-HEAD) |Head |Check if the application has a GCM key configured. 
[/apps/{appID}/configuration/gcm](/rest/apps-collection/application/configuration/gcm/#method-gcmResourceType-GET) |Get |Get the GCM key configured in the application. 
[/apps/{appID}/configuration/gcm](/rest/apps-collection/application/configuration/gcm/#method-gcmResourceType-DELETE) |Delete |Remove the GCM key of the application. 


## Events

Resource for Flex Analytics event raw data. 

See also: {% page_link rest-managing_analytics-en %} ([日本語]({% page_url rest-managing_analytics-ja %}))

Resource                                                                                         |Method |Description
-------------------------------------------------------------------------------------------------|-------|-----------
[/apps/{appID}/events](/rest/apps-collection/application/events/#method-eventsResourceType-POST) |Post   |Post event data


## Group Collection

The collection of groups that belongs to the accessed application. 

See also: {% page_link rest-managing_groups-en %} ([日本語]({% page_url rest-managing_groups-ja %}))

Resource                                                                                         |Method |Description
-------------------------------------------------------------------------------------------------|-------|-----------
[/apps/{appID}/groups](/rest/apps-collection/application/group-collection/#method-groupsResourceType-GET) |Get   |Get a list of groups filtered by membership or ownership. One of the two query parameters must be provided, if "is_member" is provided it will be retrieved a list of groups in which the user is member, if "owner" is provided it will be retrieved the list of groups owned by the user. 
[/apps/{appID}/groups](/rest/apps-collection/application/group-collection/#method-groupsResourceType-POST) |Post |Create a new group. The owner will be added also as member by default. 
[/apps/{appID}/groups/{groupID}](/rest/apps-collection/application/group-collection/group/#method-groupResourceType-GET) |Get |Get the data of the current group. 
[/apps/{appID}/groups/{groupID}](/rest/apps-collection/application/group-collection/group/#method-groupResourceType-DELETE) |Delete |Delete the current group. 
[/apps/{appID}/groups/{groupID}/acl](/rest/apps-collection/application/group-collection/group/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time.
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/groups/{groupID}/buckets/{bucketID}/query](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-default-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time. 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/groups/{groupID}/buckets/{bucketType}:{bucketID}/query](/rest/apps-collection/application/group-collection/group/bucket-collection/bucket-of-specified-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/groups/{groupID}/members](/rest/apps-collection/application/group-collection/group/group-members/#method-groupMembersResourceType-GET) |Get |Get the collection of members of the group. 
[/apps/{appID}/groups/{groupID}/members/{userID}](/rest/apps-collection/application/group-collection/group/group-members/user-member/#method--PUT) |Put |Add the current member to the group. 
[/apps/{appID}/groups/{groupID}/members/{userID}](/rest/apps-collection/application/group-collection/group/group-members/user-member/#method--DELETE) |Delete |Remove the current member from the group. 
[/apps/{appID}/groups/{groupID}/name](/rest/apps-collection/application/group-collection/group/name/#method--PUT) |Put |Update the name of the group.
[/apps/{appID}/groups/{groupID}/owner](/rest/apps-collection/application/group-collection/group/owner/#method--PUT) |Put |Change the owner of the group.
[/apps/{appID}/groups/{groupID}/topics](/rest/apps-collection/application/group-collection/group/topics/#method-topicsResourceType-GET) |Get |Obtain the list of the available topics in the application, user or group being accessed 
[/apps/{appID}/groups/{groupID}/topics/{topicID}](/rest/apps-collection/application/group-collection/group/topics/topic/#method-topicResourceType-PUT) |Put |Create a new topic. The topicID must be an string following the pattern [A-Za-z0-9_-]* and with maximum length of 64 characters. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}](/rest/apps-collection/application/group-collection/group/topics/topic/#method-topicResourceType-GET) |Get |Check the topic exists. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}](/rest/apps-collection/application/group-collection/group/topics/topic/#method-topicResourceType-DELETE) |Delete |Delete the topic with all the subscriptions it has. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/messages](/rest/apps-collection/application/group-collection/group/topics/topic/push/push-messages/#method-pushMessageResourceType-POST) |Post |Send a push message to the current topic. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic with a push configuration.
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic with a push configuration. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-GET) |Get |Check if this user is subscribed to the current topic. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-DELETE) |Delete |Unsubscribe this user from the current topic. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/groups/{groupID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/group-collection/group/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 


## Social Integration

This resource is the point of integration with third parties social networks for user authentication 

See also: {% page_link rest-social_network_integration-en %} ([日本語]({% page_url rest-social_network_integration-ja %}))

Resource                             |Method |Description
-------------------------------------|-------|-----------
[/apps/{appID}/integration/facebook](/rest/apps-collection/application/social-integration/facebook/#method--POST) |Post   |Request a new token


## Templates

Resource to manage custom templates. This is used to define custom messages to send message to all users when they use your application, per example in a verification email case.

See also: {% page_link rest-admin_features-en %} ([日本語]({% page_url rest-admin_features-ja %}))

Resource                                                  |Method |Description
----------------------------------------------------------|-------|-----------
[/apps/{appID}/templates/{templateName}/locales/{locale}](/rest/apps-collection/application/templates/template-name/locale.html#method--GET) |Get    |Get the template of the application.
[/apps/{appID}/templates/{templateName}/locales/{locale}](/rest/apps-collection/application/templates/template-name/locale.html#method--PUT) |Put    |Set or update the template.
[/apps/{appID}/templates/{templateName}/locales/{locale}](/rest/apps-collection/application/templates/template-name/locale.html#method--DELETE) |Delete |Delete the template of the application.


## Topics

This resource represent a list of all topics created in an application, user or group. Topics are channels created to send messages. A user has to be subscribed to a topic to receive a message from it. 

See also: {% page_link rest-admin_features-en %} ([日本語]({% page_url rest-admin_features-ja %}))

Resource |Method |Description
---------|-------|------------
[/apps/{appID}/topics](/rest/apps-collection/application/topics/#method-topicsResourceType-GET) |Get |Obtain the list of the available topics in the application, user or group being accessed 
[/apps/{appID}/topics/{topicID}](/rest/apps-collection/application/topics/topic/#method-topicResourceType-PUT) |Put |Create a new topic. The topicID must be an string following the pattern [A-Za-z0-9_-]* and with maximum length of 64 characters. 
[/apps/{appID}/topics/{topicID}](/rest/apps-collection/application/topics/topic/#method-topicResourceType-GET) |Get |Check the topic exists. 
[/apps/{appID}/topics/{topicID}](/rest/apps-collection/application/topics/topic/#method-topicResourceType-DELETE) |Delete |Delete the topic with all the subscriptions it has. 
[/apps/{appID}/topics/{topicID}/push/messages](/rest/apps-collection/application/topics/topic/push/push-messages/#method-pushMessageResourceType-POST) |Post |Send a push message to the current topic. 
[/apps/{appID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic. 
[/apps/{appID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic with a push configuration.
[/apps/{appID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic. 
[/apps/{appID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic with a push configuration. 
[/apps/{appID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-GET) |Get |Check if this user is subscribed to the current topic. 
[/apps/{appID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-DELETE) |Delete |Unsubscribe this user from the current topic.
[/apps/{appID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 


## User Collection

All the users of the current application. 

See also: {% page_link rest-managing_users-en %} ([日本語]({% page_url rest-managing_users-ja %}))

Resource |Method |Description
---------|-------|------------
[/apps/{appID}/users](/rest/apps-collection/application/user-collection/#method-usersResourceType-POST) |Post |Create a new user in the current application.
[/apps/{appID}/users/{accountType}:{address}](/rest/apps-collection/application/user-collection/user-by-address/#method-userResourceType-GET) |Get |Retrieve the user information. 
[/apps/{appID}/users/{accountType}:{address}](/rest/apps-collection/application/user-collection/user-by-address/#method-userResourceType-POST) |Post |Modify user's data. 
[/apps/{appID}/users/{accountType}:{address}](/rest/apps-collection/application/user-collection/user-by-address/#method-userResourceType-DELETE) |Delete |Delete the user from Kii Platform. 
[/apps/{appID}/users/{accountType}:{address}/acl](/rest/apps-collection/application/user-collection/user-by-address/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time.
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketID}/query](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-default-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time. 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/{accountType}:{address}/buckets/{bucketType}:{bucketID}/query](/rest/apps-collection/application/user-collection/user-by-address/bucket-collection/bucket-of-specified-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/{accountType}:{address}/country](/rest/apps-collection/application/user-collection/user-by-address/country/#method--GET) |Get |Get the country. 
[/apps/{appID}/users/{accountType}:{address}/display-name](/rest/apps-collection/application/user-collection/user-by-address/display-name/#method--GET) |Get |Get the display name
[/apps/{appID}/users/{accountType}:{address}/email-address](/rest/apps-collection/application/user-collection/user-by-address/e-mail-address/#method-userEmailAddressResourceType-GET) |Get |Get the e-mail address of the user. 
[/apps/{appID}/users/{accountType}:{address}/email-address](/rest/apps-collection/application/user-collection/user-by-address/e-mail-address/#method-userEmailAddressResourceType-PUT) |Put |Update the e-mail address of the user 
[/apps/{appID}/users/{accountType}:{address}/email-address](/rest/apps-collection/application/user-collection/user-by-address/e-mail-address/#method-userEmailAddressResourceType-DELETE) |Delete |Remove the e-mail address from the user. 
[/apps/{appID}/users/{accountType}:{address}/email-address/resend-verification](/rest/apps-collection/application/user-collection/user-by-address/e-mail-address/resend-verification/#method--POST) |Post |Resend to the user the e-mail containing the verification code. 
[/apps/{appID}/users/{accountType}:{address}/email-address/verification-code](/rest/apps-collection/application/user-collection/user-by-address/e-mail-address/verification-code/#method--GET) |Get |Get the verification code for the e-mail address of the user. 
[/apps/{appID}/users/{accountType}:{address}/email-address/verify](/rest/apps-collection/application/user-collection/user-by-address/e-mail-address/verify/#method--POST) |Post |Verify the e-mail address of the user. 
[/apps/{appID}/users/{accountType}:{address}/facebook/link](/rest/apps-collection/application/user-collection/user-by-address/facebook/link/#method--POST) |Post |Link the accessed user with Facebook. 
[/apps/{appID}/users/{accountType}:{address}/facebook/unlink](/rest/apps-collection/application/user-collection/user-by-address/facebook/unlink/#method--POST) |Post |Unlink the accessed user from Facebook. 
[/apps/{appID}/users/{accountType}:{address}/locale](/rest/apps-collection/application/user-collection/user-by-address/locale/#method--GET) |Get |Get the locale
[/apps/{appID}/users/{accountType}:{address}/password](/rest/apps-collection/application/user-collection/user-by-address/password/#method--PUT) |Put |Change the password of the user. 
[/apps/{appID}/users/{accountType}:{address}/password/reset](/rest/apps-collection/application/user-collection/user-by-address/password/reset-password/#method--POST) |Post |Send an e-mail to the user containing a link which will allow to reset the password. 
[/apps/{appID}/users/{accountType}:{address}/phone-number](/rest/apps-collection/application/user-collection/user-by-address/phone-number/#method-userPhoneNumberResourceType-GET) |Get |Get the phone number of the user. 
[/apps/{appID}/users/{accountType}:{address}/phone-number](/rest/apps-collection/application/user-collection/user-by-address/phone-number/#method-userPhoneNumberResourceType-PUT) |Put |Update the phone number of the user. 
[/apps/{appID}/users/{accountType}:{address}/phone-number](/rest/apps-collection/application/user-collection/user-by-address/phone-number/#method-userPhoneNumberResourceType-DELETE) |Delete |Remove the phone number from the user. 
[/apps/{appID}/users/{accountType}:{address}/phone-number/resend-verification](/rest/apps-collection/application/user-collection/user-by-address/phone-number/resend-verification/#method--POST) |Post |Resend to the user the SMS containing the verification code. 
[/apps/{appID}/users/{accountType}:{address}/phone-number/reset-verification-code](/rest/apps-collection/application/user-collection/user-by-address/phone-number/reset-verification-code/#method--POST) |Post |Reset the verification code for the phone number and retrieve it. 
[/apps/{appID}/users/{accountType}:{address}/phone-number/verification-code](/rest/apps-collection/application/user-collection/user-by-address/phone-number/verification-code/#method--GET) |Get |Get the verification code for the phone number of the user. 
[/apps/{appID}/users/{accountType}:{address}/phone-number/verify](/rest/apps-collection/application/user-collection/user-by-address/phone-number/verify/#method--POST) |Post |Verify the phone number of the user.
[/apps/{appID}/users/{accountType}:{address}/push/messages](/rest/apps-collection/application/user-collection/user-by-address/push/push-messages/#method-pushConcreteMessageResourceType-POST) |Post |Send a push message to the current user. 
[/apps/{appID}/users/{accountType}:{address}/status](/rest/apps-collection/application/user-collection/user-by-address/status/#method--PUT) |Put |Change the status of the user.
[/apps/{appID}/users/{accountType}:{address}/topics](/rest/apps-collection/application/user-collection/user-by-address/topics/#method-topicsResourceType-GET) |Get |Obtain the list of the available topics in the application, user or group being accessed 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/#method-topicResourceType-PUT) |Put |Create a new topic. The topicID must be an string following the pattern [A-Za-z0-9_-]* and with maximum length of 64 characters. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/#method-topicResourceType-GET) |Get |Check the topic exists. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/#method-topicResourceType-DELETE) |Delete |Delete the topic with all the subscriptions it has. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/messages](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/push-messages/#method-pushMessageResourceType-POST) |Post |Send a push message to the current topic.
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic with a push configuration. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic with a push configuration. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-GET) |Get |Check if this user is subscribed to the current topic. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-DELETE) |Delete |Unsubscribe this user from the current topic. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{accountType}:{address}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-address/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/#method-userResourceType-GET) |Get |Retrieve the user information. 
[/apps/{appID}/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/#method-userResourceType-POST) |Post |Modify user's data. 
[/apps/{appID}/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/#method-userResourceType-DELETE) |Delete |Delete the user from Kii Platform. 
[/apps/{appID}/users/{userID}/acl](/rest/apps-collection/application/user-collection/user-by-id/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/{userID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{userID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/{userID}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/{userID}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/bucket-collection/bucket-of-default-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time.
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/{userID}/buckets/{bucketID}/query](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-default-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time. 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/{userID}/buckets/{bucketType}:{bucketID}/query](/rest/apps-collection/application/user-collection/user-by-id/bucket-collection/bucket-of-specified-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/{userID}/country](/rest/apps-collection/application/user-collection/user-by-id/country/#method--GET) |Get |Get the country. 
[/apps/{appID}/users/{userID}/display-name](/rest/apps-collection/application/user-collection/user-by-id/display-name/#method--GET) |Get |Get the display name
[/apps/{appID}/users/{userID}/email-address](/rest/apps-collection/application/user-collection/user-by-id/e-mail-address/#method-userEmailAddressResourceType-GET) |Get |Get the e-mail address of the user. 
[/apps/{appID}/users/{userID}/email-address](/rest/apps-collection/application/user-collection/user-by-id/e-mail-address/#method-userEmailAddressResourceType-PUT) |Put |Update the e-mail address of the user 
[/apps/{appID}/users/{userID}/email-address](/rest/apps-collection/application/user-collection/user-by-id/e-mail-address/#method-userEmailAddressResourceType-DELETE) |Delete |Remove the e-mail address from the user. 
[/apps/{appID}/users/{userID}/email-address/resend-verification](/rest/apps-collection/application/user-collection/user-by-id/e-mail-address/resend-verification/#method--POST) |Post |Resend to the user the e-mail containing the verification code. 
[/apps/{appID}/users/{userID}/email-address/verification-code](/rest/apps-collection/application/user-collection/user-by-id/e-mail-address/verification-code/#method--GET) |Get |Get the verification code for the e-mail address of the user. 
[/apps/{appID}/users/{userID}/email-address/verify](/rest/apps-collection/application/user-collection/user-by-id/e-mail-address/verify/#method--POST) |Post |Verify the e-mail address of the user. 
[/apps/{appID}/users/{userID}/facebook/link](/rest/apps-collection/application/user-collection/user-by-id/facebook/link/#method--POST) |Post |Link the accessed user with Facebook. 
[/apps/{appID}/users/{userID}/facebook/unlink](/rest/apps-collection/application/user-collection/user-by-id/facebook/unlink/#method--POST) |Post |Unlink the accessed user from Facebook. 
[/apps/{appID}/users/{userID}/locale](/rest/apps-collection/application/user-collection/user-by-id/locale/#method--GET) |Get |Get the locale
[/apps/{appID}/users/{userID}/password](/rest/apps-collection/application/user-collection/user-by-id/password/#method--PUT) |Put |Change the password of the user. 
[/apps/{appID}/users/{userID}/password/reset](/rest/apps-collection/application/user-collection/user-by-id/password/reset-password/#method--POST) |Post |Send an e-mail to the user containing a link which will allow to reset the password. 
[/apps/{appID}/users/{userID}/phone-number](/rest/apps-collection/application/user-collection/user-by-id/phone-number/#method-userPhoneNumberResourceType-GET) |Get |Get the phone number of the user. 
[/apps/{appID}/users/{userID}/phone-number](/rest/apps-collection/application/user-collection/user-by-id/phone-number/#method-userPhoneNumberResourceType-PUT) |Put |Update the phone number of the user. 
[/apps/{appID}/users/{userID}/phone-number](/rest/apps-collection/application/user-collection/user-by-id/phone-number/#method-userPhoneNumberResourceType-DELETE) |Delete |Remove the phone number from the user. 
[/apps/{appID}/users/{userID}/phone-number/resend-verification](/rest/apps-collection/application/user-collection/user-by-id/phone-number/resend-verification/#method--POST) |Post |Resend to the user the SMS containing the verification code. 
[/apps/{appID}/users/{userID}/phone-number/reset-verification-code](/rest/apps-collection/application/user-collection/user-by-id/phone-number/reset-verification-code/#method--POST) |Post |Reset the verification code for the phone number and retrieve it. 
[/apps/{appID}/users/{userID}/phone-number/verification-code](/rest/apps-collection/application/user-collection/user-by-id/phone-number/verification-code/#method--GET) |Get |Get the verification code for the phone number of the user. 
[/apps/{appID}/users/{userID}/phone-number/verify](/rest/apps-collection/application/user-collection/user-by-id/phone-number/verify/#method--POST) |Post |Verify the phone number of the user.
[/apps/{appID}/users/{userID}/push/messages](/rest/apps-collection/application/user-collection/user-by-id/push/push-messages/#method-pushConcreteMessageResourceType-POST) |Post |Send a push message to the current user. 
[/apps/{appID}/users/{userID}/status](/rest/apps-collection/application/user-collection/user-by-id/status/#method--PUT) |Put |Change the status of the user.
[/apps/{appID}/users/{userID}/topics](/rest/apps-collection/application/user-collection/user-by-id/topics/#method-topicsResourceType-GET) |Get |Obtain the list of the available topics in the application, user or group being accessed 
[/apps/{appID}/users/{userID}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/#method-topicResourceType-PUT) |Put |Create a new topic. The topicID must be an string following the pattern [A-Za-z0-9_-]* and with maximum length of 64 characters. 
[/apps/{appID}/users/{userID}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/#method-topicResourceType-GET) |Get |Check the topic exists. 
[/apps/{appID}/users/{userID}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/#method-topicResourceType-DELETE) |Delete |Delete the topic with all the subscriptions it has. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/messages](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/push-messages/#method-pushMessageResourceType-POST) |Post |Send a push message to the current topic.
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic with a push configuration. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic with a push configuration. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-GET) |Get |Check if this user is subscribed to the current topic. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-DELETE) |Delete |Unsubscribe this user from the current topic. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/{userID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-id/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/id:{internalID}](/rest/apps-collection/application/user-collection/user-by-internalid/#method-userResourceType-GET) |Get |Retrieve the user information. 
[/apps/{appID}/users/id:{internalID}](/rest/apps-collection/application/user-collection/user-by-internalid/#method-userResourceType-POST) |Post |Modify user's data. 
[/apps/{appID}/users/id:{internalID}](/rest/apps-collection/application/user-collection/user-by-internalid/#method-userResourceType-DELETE) |Delete |Delete the user from Kii Platform. 
[/apps/{appID}/users/id:{internalID}/acl](/rest/apps-collection/application/user-collection/user-by-internalid/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalidet-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}rnalID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time.
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketID}/query](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-default-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time. 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/id:{internalID}/buckets/{bucketType}:{bucketID}/query](/rest/apps-collection/application/user-collection/user-by-internalid/bucket-collection/bucket-of-specified-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/id:{internalID}/country](/rest/apps-collection/application/user-collection/user-by-internalid/country/#method--GET) |Get |Get the country. 
[/apps/{appID}/users/id:{internalID}/display-name](/rest/apps-collection/application/user-collection/user-by-internalid/display-name/#method--GET) |Get |Get the display name
[/apps/{appID}/users/id:{internalID}/email-address](/rest/apps-collection/application/user-collection/user-by-internalid/e-mail-address/#method-userEmailAddressResourceType-GET) |Get |Get the e-mail address of the user. 
[/apps/{appID}/users/id:{internalID}/email-address](/rest/apps-collection/application/user-collection/user-by-internalid/e-mail-address/#method-userEmailAddressResourceType-PUT) |Put |Update the e-mail address of the user 
[/apps/{appID}/users/id:{internalID}/email-address](/rest/apps-collection/application/user-collection/user-by-internalid/e-mail-address/#method-userEmailAddressResourceType-DELETE) |Delete |Remove the e-mail address from the user. 
[/apps/{appID}/users/id:{internalID}/email-address/resend-verification](/rest/apps-collection/application/user-collection/user-by-internalid/e-mail-address/resend-verification/#method--POST) |Post |Resend to the user the e-mail containing the verification code. 
[/apps/{appID}/users/id:{internalID}/email-address/verification-code](/rest/apps-collection/application/user-collection/user-by-internalid/e-mail-address/verification-code/#method--GET) |Get |Get the verification code for the e-mail address of the user. 
[/apps/{appID}/users/id:{internalID}/email-address/verify](/rest/apps-collection/application/user-collection/user-by-internalid/e-mail-address/verify/#method--POST) |Post |Verify the e-mail address of the user. 
[/apps/{appID}/users/id:{internalID}/facebook/link](/rest/apps-collection/application/user-collection/user-by-internalid/facebook/link/#method--POST) |Post |Link the accessed user with Facebook. 
[/apps/{appID}/users/id:{internalID}/facebook/unlink](/rest/apps-collection/application/user-collection/user-by-internalid/facebook/unlink/#method--POST) |Post |Unlink the accessed user from Facebook. 
[/apps/{appID}/users/id:{internalID}/locale](/rest/apps-collection/application/user-collection/user-by-internalid/locale/#method--GET) |Get |Get the locale
[/apps/{appID}/users/id:{internalID}/password](/rest/apps-collection/application/user-collection/user-by-internalid/password/#method--PUT) |Put |Change the password of the user. 
[/apps/{appID}/users/id:{internalID}/password/reset](/rest/apps-collection/application/user-collection/user-by-internalid/password/reset-password/#method--POST) |Post |Send an e-mail to the user containing a link which will allow to reset the password. 
[/apps/{appID}/users/id:{internalID}/phone-number](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/#method-userPhoneNumberResourceType-GET) |Get |Get the phone number of the user. 
[/apps/{appID}/users/id:{internalID}/phone-number](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/#method-userPhoneNumberResourceType-PUT) |Put |Update the phone number of the user. 
[/apps/{appID}/users/id:{internalID}/phone-number](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/#method-userPhoneNumberResourceType-DELETE) |Delete |Remove the phone number from the user. 
[/apps/{appID}/users/id:{internalID}/phone-number/resend-verification](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/resend-verification/#method--POST) |Post |Resend to the user the SMS containing the verification code. 
[/apps/{appID}/users/id:{internalID}/phone-number/reset-verification-code](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/reset-verification-code/#method--POST) |Post |Reset the verification code for the phone number and retrieve it. 
[/apps/{appID}/users/id:{internalID}/phone-number/verification-code](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/verification-code/#method--GET) |Get |Get the verification code for the phone number of the user. 
[/apps/{appID}/users/id:{internalID}/phone-number/verify](/rest/apps-collection/application/user-collection/user-by-internalid/phone-number/verify/#method--POST) |Post |Verify the phone number of the user.
[/apps/{appID}/users/id:{internalID}/push/messages](/rest/apps-collection/application/user-collection/user-by-internalid/push/push-messages/#method-pushConcreteMessageResourceType-POST) |Post |Send a push message to the current user. 
[/apps/{appID}/users/id:{internalID}/status](/rest/apps-collection/application/user-collection/user-by-internalid/status/#method--PUT) |Put |Change the status of the user.
[/apps/{appID}/users/id:{internalID}/topics](/rest/apps-collection/application/user-collection/user-by-internalid/topics/#method-topicsResourceType-GET) |Get |Obtain the list of the available topics in the application, user or group being accessed 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/#method-topicResourceType-PUT) |Put |Create a new topic. The topicID must be an string following the pattern [A-Za-z0-9_-]* and with maximum length of 64 characters. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/#method-topicResourceType-GET) |Get |Check the topic exists. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/#method-topicResourceType-DELETE) |Delete |Delete the topic with all the subscriptions it has. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/messages](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/push-messages/#method-pushMessageResourceType-POST) |Post |Send a push message to the current topic.
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic with a push configuration. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic with a push configuration. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-GET) |Get |Check if this user is subscribed to the current topic. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-DELETE) |Delete |Unsubscribe this user from the current topic. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/id:{internalID}/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-by-internalid/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/me](/rest/apps-collection/application/user-collection/user-logged-in/#method-userResourceType-GET) |Get |Retrieve the user information. 
[/apps/{appID}/users/me](/rest/apps-collection/application/user-collection/user-logged-in/#method-userResourceType-POST) |Post |Modify user's data. 
[/apps/{appID}/users/me](/rest/apps-collection/application/user-collection/user-logged-in/#method-userResourceType-DELETE) |Delete |Delete the user from Kii Platform. 
[/apps/{appID}/users/me/acl](/rest/apps-collection/application/user-collection/user-logged-in/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/me/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/me/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/me/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/me/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/me/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/me/buckets/{bucketID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/me/buckets/{bucketID}/acl](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/me/buckets/{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/me/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-inet-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/mernalID}/buckets/{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/me/buckets/{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time.
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/me/buckets/{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/me/buckets/{bucketID}/query](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-default-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-GET) |Get |Retrieve a bucket
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-HEAD) |Head |Verify a bucket exists
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/#method-bucketResourceType-DELETE) |Delete |Delete a bucket with its content
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource.
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/#method--POST) |Post |Subscribe the current authenticated user to the filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--PUT) |Put |Subscribe this user to the current filter with a push configuration. If bucket wouldn't exist it will be created before and the subscriber will become the bucket owner. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--GET) |Get |Check if this user is subscribed to the current filter. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/#method--DELETE) |Delete |Unsubscribe this user from the current filter. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/filters/{filterID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/filters/filter/subscriptors/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/#method-objectsResourceType-POST) |Post |Creates a new object in the accessed bucket. If the bucket do not exists, this acction will be create the bucket. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-DELETE) |Delete |Delete the accessed object. Delete is conditional if "If-Match" header is provided, in that case the object will be deleted if the version is not stale. If "If-None-Match" header is provided the delete operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-GET) |Get |Retrieve the accessed object
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-HEAD) |Head |Verifies the accessed object exists 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PUT) |Put |Replace or create an object with the specified ID by template. If "If-Match" header is provided the operation is an update conditional, the object will be replaced if the version is not stale. If "If-None-Match" header is provided the replace operation will be unconditional. If none of those headers are in the request the operation will be an unconditional replace if the object exists or the object will be created if not exists. "If-Match" and "If-None-Match" headers can not be provided at the same time 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/#method-objectResourceType-PATCH) |Patch |Update partially the accessed object, fields can be added or updated, but not deleted. If "If-Match" header is provided the operation is an update conditional, the object will be updated if the version is not stale. If "If-None-Match" header is provided the update operation will be unconditional, the same if none of those headers are in the request. "If-Match" and "If-None-Match" headers can not be provided at the same time
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/#method-aclResourceType-GET) |Get |Retrieve the complete ACL of the resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/#method--GET) |Get |Retrieve the ACL entries for the current verb. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--GET) |Get |Check if this group has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--PUT) |Put |Grant to this group the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/GroupID:{subjectGroupID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/group-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--GET) |Get |Check if this user has granted the verb for the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--PUT) |Put |Grant to this user the verb on the accessed resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/acl/{ACLVerb}/UserID:{subjectUserID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/acl/acl-verb/user-id/#method--DELETE) |Delete |Revoke the user the accessed verb on the resource. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-HEAD) |Head |Verify the object being accessed has a body 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-GET) |Get |Retrieve the body of the object being accessed
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/#method-objectBodyResourceType-PUT) |Put |Add or replace the body of the object being accessed. This operation can be conditional if "If-Match" header is provided, in that case the object will added or replaced the body if the version is not stale. If "If-None-Match" header is provided this operation will be unconditional, the same if none of those headers are in the request "If-Match" and "If-None-Match" headers can not be provided at the same time. 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/publish](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/publish/#method--POST) |Post |Gets the URL where the body of the object being accessed is published 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/#method-objectBodyUploadsResourceType-POST) |Post |Start an upload for the given object 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/#method-objectBodyUploadResourceType-HEAD) |Head |Get the upload metadata 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/data](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/data/#method--PUT) |Put |Uploads given object data 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/cancelled](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/cancel/#method--POST) |Post |Sets object body upload status to cancelled 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/objects/{objectID}/body/upload/{uploadID}/status/committed](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/object-collection/object/body/uploads/upload/status/commit/#method--POST) |Post |Sets object body upload status to committed 
[/apps/{appID}/users/me/buckets/{bucketType}:{bucketID}/query](/rest/apps-collection/application/user-collection/user-logged-in/bucket-collection/bucket-of-specified-type/query/#method--POST) |Post |Obtain an array of objects contained in the bucket that match a query conditions 
[/apps/{appID}/users/me/country](/rest/apps-collection/application/user-collection/user-logged-in/country/#method--GET) |Get |Get the country. 
[/apps/{appID}/users/me/display-name](/rest/apps-collection/application/user-collection/user-logged-in/display-name/#method--GET) |Get |Get the display name
[/apps/{appID}/users/me/email-address](/rest/apps-collection/application/user-collection/user-logged-in/e-mail-address/#method-userEmailAddressResourceType-GET) |Get |Get the e-mail address of the user. 
[/apps/{appID}/users/me/email-address](/rest/apps-collection/application/user-collection/user-logged-in/e-mail-address/#method-userEmailAddressResourceType-PUT) |Put |Update the e-mail address of the user 
[/apps/{appID}/users/me/email-address](/rest/apps-collection/application/user-collection/user-logged-in/e-mail-address/#method-userEmailAddressResourceType-DELETE) |Delete |Remove the e-mail address from the user. 
[/apps/{appID}/users/me/email-address/resend-verification](/rest/apps-collection/application/user-collection/user-logged-in/e-mail-address/resend-verification/#method--POST) |Post |Resend to the user the e-mail containing the verification code. 
[/apps/{appID}/users/me/email-address/verification-code](/rest/apps-collection/application/user-collection/user-logged-in/e-mail-address/verification-code/#method--GET) |Get |Get the verification code for the e-mail address of the user. 
[/apps/{appID}/users/me/email-address/verify](/rest/apps-collection/application/user-collection/user-logged-in/e-mail-address/verify/#method--POST) |Post |Verify the e-mail address of the user. 
[/apps/{appID}/users/me/facebook/link](/rest/apps-collection/application/user-collection/user-logged-in/facebook/link/#method--POST) |Post |Link the accessed user with Facebook. 
[/apps/{appID}/users/me/facebook/unlink](/rest/apps-collection/application/user-collection/user-logged-in/facebook/unlink/#method--POST) |Post |Unlink the accessed user from Facebook. 
[/apps/{appID}/users/me/locale](/rest/apps-collection/application/user-collection/user-logged-in/locale/#method--GET) |Get |Get the locale
[/apps/{appID}/users/me/password](/rest/apps-collection/application/user-collection/user-logged-in/password/#method--PUT) |Put |Change the password of the user. 
[/apps/{appID}/users/me/password/reset](/rest/apps-collection/application/user-collection/user-logged-in/password/reset-password/#method--POST) |Post |Send an e-mail to the user containing a link which will allow to reset the password. 
[/apps/{appID}/users/me/phone-number](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/#method-userPhoneNumberResourceType-GET) |Get |Get the phone number of the user. 
[/apps/{appID}/users/me/phone-number](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/#method-userPhoneNumberResourceType-PUT) |Put |Update the phone number of the user. 
[/apps/{appID}/users/me/phone-number](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/#method-userPhoneNumberResourceType-DELETE) |Delete |Remove the phone number from the user. 
[/apps/{appID}/users/me/phone-number/resend-verification](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/resend-verification/#method--POST) |Post |Resend to the user the SMS containing the verification code. 
[/apps/{appID}/users/me/phone-number/reset-verification-code](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/reset-verification-code/#method--POST) |Post |Reset the verification code for the phone number and retrieve it. 
[/apps/{appID}/users/me/phone-number/verification-code](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/verification-code/#method--GET) |Get |Get the verification code for the phone number of the user. 
[/apps/{appID}/users/me/phone-number/verify](/rest/apps-collection/application/user-collection/user-logged-in/phone-number/verify/#method--POST) |Post |Verify the phone number of the user.
[/apps/{appID}/users/me/push/messages](/rest/apps-collection/application/user-collection/user-logged-in/push/push-messages/#method-pushConcreteMessageResourceType-POST) |Post |Send a push message to the current user. 
[/apps/{appID}/users/me/status](/rest/apps-collection/application/user-collection/user-logged-in/status/#method--PUT) |Put |Change the status of the user.
[/apps/{appID}/users/me/topics](/rest/apps-collection/application/user-collection/user-logged-in/topics/#method-topicsResourceType-GET) |Get |Obtain the list of the available topics in the application, user or group being accessed 
[/apps/{appID}/users/me/topics/{topicID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/#method-topicResourceType-PUT) |Put |Create a new topic. The topicID must be an string following the pattern [A-Za-z0-9_-]* and with maximum length of 64 characters. 
[/apps/{appID}/users/me/topics/{topicID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/#method-topicResourceType-GET) |Get |Check the topic exists. 
[/apps/{appID}/users/me/topics/{topicID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/#method-topicResourceType-DELETE) |Delete |Delete the topic with all the subscriptions it has. 
[/apps/{appID}/users/me/topics/{topicID}/push/messages](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/push-messages/#method-pushMessageResourceType-POST) |Post |Send a push message to the current topic.
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/#method-subscribedUsersResourceType-POST) |Post |Subscribe the current authenticated user to the topic with a push configuration. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-PUT) |Put |Subscribe this user to the current topic with a push configuration. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-GET) |Get |Check if this user is subscribed to the current topic. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users/{userID}](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/subscribed-user/#method-subscribedUserResourceType-DELETE) |Delete |Unsubscribe this user from the current topic. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--PUT) |Put |Update the push configuration of the subscription of the accessed user. 
[/apps/{appID}/users/me/topics/{topicID}/push/subscriptions/users/{userID}/configuration](/rest/apps-collection/application/user-collection/user-logged-in/topics/topic/push/subscriptions/subscribers/subscribed-user/description/#method--GET) |Get |Get the push configuration of the subscription of the accessed user. 


## OAuth2

This resource acts as the Oauth 2 endpoint for the platform, in the context of the application indicated by "X-Kii-AppID" 

See also: {% page_link rest-admin_features-en %} ([日本語]({% page_url rest-admin_features-ja %}))

Resource                                               |Method |Description
-------------------------------------------------------|-------|-----------
[/oauth2/token](/rest/oauth2/token/#method-token-POST) |Post   |Request a new token. 
