---
layout: en-doc
title: Setting a Topic's ACL
page-id: android-push_to_user_setting_acl-en
sort-priority: 50
old-url: /en/change-a-topic-s-acl
---
Sometimes we want to modify the default rules applied onto a topic.  

* **Scenario #2a**: Allowing all application users to subscribe.  (Extending Scenario #2)<BR />
  The topic owner wants to open the existing "group messaging" channel to all application users (any authenticated users) by allowing them to join as ROM (read-only members).

* **Scenario #2b**: Allowing a specific user to subscribe and send messages.  (Extending Scenario #2)<BR />
  The topic owner wants to invite a specific user in the existing "group messaging" as a supervisor; here the owner wants to allow the supervisor full access (i.e., both subscribing to the topic and sending push messages).

* **Scenario #3a**: Joining a group to my private topic.  (Extending Scenario #3)<BR />
  The app user now wants to share her TODO list with her family members.  She already has a use group in which all family members are present, so she want to allow all members in this group to subscribe to the topic.

These cases can be managed by setting a new ACL entry (white list entry) onto the target topic.


## Set a new ACL entry on a Topic

When adding a new ACL entry onto a topic, we need to define a tuple {**Subject**, **Action**, **grant/revoke**}

* **Subject**: To whom we are going to grant/revoke an action.<BR />This can be one of the followings:
 * A specific user
 * A specific user group
 * Any authenticated users (i.e., all application users)
* **Action**: What action we are going to grant/revoke.<BR />This can be one of the followings:
 * Subscribing to the topic (SUBSCRIBE\_TO\_TOPIC)
 * Sending push messages to the topic (SEND\_MESSAGE\_TO\_TOPIC)
* **Grant or revoke**: Whether we are going to grant or revoke the action to the subject.  "Revoking" is only possible for an ACL entry that has been already registered.  (i.e., you cannot put a new "black list" ACL entry)

For example, please check the following code snippets to see how you can set ACL entries for Scenario #2a and #2b.

```java
try{
  // Instantiate the already-existing group-scope topic.
  String groupName = "MyGroup";
  KiiGroup group = Kii.group(groupName);
  group.save();
  String topicName = "GroupTopic";
  KiiTopic topic = group.topic(topicName);

  // Get an ACL handler
  KiiACL acl = topic.acl();

  // Scenario #2a:
  // Allow all application users (authenticated users) to subscribe
  KiiACLEntry entry = new KiiACLEntry(KiiAnyAuthenticatedUser.create(), 
      TopicAction.SUBSCRIBE_TO_TOPIC, true);
  acl.putACLEntry(entry);

  // Scenario #2b:
  // Allow a user to subscribe and send push messages.
  KiiUser user = KiiUser.findUserByUsername("_I_am_a_supervisor_");
  KiiACLEntry entry = new KiiACLEntry(user, 
      TopicAction.SUBSCRIBE_TO_TOPIC, true);
  acl.putACLEntry(entry);

  KiiACLEntry entry = new KiiACLEntry(user, 
      TopicAction.SEND_MESSAGE_TO_TOPIC, true);
  acl.putACLEntry(entry);

  // Reflect all ACL entries
  acl.save();

} catch (IOException e){
  // failed.
} catch (AppException e){
  // failed.
} 
```

Here is a brief explanation of what is happening in the snippet.

1. Create an ACL handler by invoking `acl` method.
2. Invoke `KiiACLEntry` method to create an ACL entry.
 * For Scenario #2a, we are setting `kiiAnyAuthenticatedUser.create()` as a Subject and `TopicAction.SUBSCRIBE_TO_TOPIC` as an action so as to grant all authenticated users the permission to subscribe to the topic.
 * For Scenario #2b, we are setting the target user as a Subject and both `TopicAction.SUBSCRIBE_TO_TOPIC` and `TopicAction.SEND_MESSAGE_TO_TOPIC` as actions so as to grant this user the permission to subscribe and send messages to the topic.
3. Invoke `putACLEntry` method to locally save each ACL entry.
4. Invoke `save` method to save the ACL entries to Kii Cloud.

The next snippet shows how you can set ACL entries for Scenario #3a.

```java
try{
  // Instantiate the already-existing user-scope topic.
  KiiUser user = KiiUser.getCurrentUser();
  String topicName = "MyTODO";
  KiiTopic topic = user.topic(topicName);

  // Get an ACL handler
  KiiACL acl = topic.acl();

  // Scenario #3a:
  // Allow group members to subscribe.
  String groupName = "MyFamily";
  KiiGroup group = Kii.group(groupName);
  group.save();
  
  KiiACLEntry entry = new KiiACLEntry(group, 
      TopicAction.SUBSCRIBE_TO_TOPIC, true);
  acl.putACLEntry(entry);

  // Reflect all ACL entries
  acl.save();

} catch (IOException ioe) {
  // Changing topic ACL failed.
} catch (GroupOperationException ge) {
  // Changing topic ACL (group operation) failed.
} catch (AppException e) {
  // Changing topic ACL failed.
} 
```

The basic operations are the same as that of the previous snippet.  In this snippet we are specifying a group as an ACL's subject so as to grant the permission to the group members.
