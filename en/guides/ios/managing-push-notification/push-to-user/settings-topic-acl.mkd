---
layout: en-doc
title: Change a Topic's ACL
sort-priority: 50
page-id: ios-settings_topic_acl-en
---
Sometimes we want to change the default rules applied onto a topic.

* **Scenario #2a:**  Allowing all application users to subscribe.  (Extending
  Scenario #2)  
    The topic owner wants to open the existing "group messaging" channel to all
    application users (any authenticated users) by allowing them to join as ROM
    (read-only members).

* **Scenario #2b:** Allowing a specific user to subscribe and send messages.
  (Extending Scenario #2)  
    The topic owner wants to invite a specific user in the existing "group
    messaging" as a supervisor; here the owner wants to allow the supervisor
    full access (i.e., both subscribing to the topic and sending push
    messages).

* **Scenario #3a:** Joining a group to my private topic.
  (Extending Scenario #3)  
    The app user now wants to share her TODO list with her family members.  She
    already has a use group in which all family members are present, so she
    want to allow all members in this group to subscribe to the topic.

These cases can be managed by setting a new ACL entry (white list entry) onto
the target topic.

## Set a new ACL on a Topic

When adding a new ACL onto a topic, we need to define a tuple {Subject, Action,
grant/revoke}

* **Subject**: To whom we are going to grant/revoke an action.   

    This can be one of the followings:
    * A specific user
    * A specific user group
    * Any authenticated users (i.e., all application users)

* **Action**: What action we are going to grant/revoke.  

    This can be one of the followings:
    * Subscribing to the topic (KiiACLTopicActionSubscribe)
    * Sending push messages to the topic (KiiACLTopicActionSend)

* **Grant or revoke**: Whether we are going to grant or revoke the action to
  the subject.

For example, please check the following code snippets to see how you can set ACL entries for Scenario #2a and #2b.

```objc
NSError *error;

// Instantiate the already-existing group-scope topic.
NSString *groupname = @"MyGroup";
KiiGroup *group = [KiiGroup groupWithName:groupname];
NSString *topicname = @"GroupTopic";
KiITopic *topic = [group topicWithName:topicname];

// Get an ACL handler.
KiiACL *acl = [topic topicACL];

// Scenario #2a:
// Allow all application users (authenticated users) to subscribe
KiiAnyAuthenticatedUser *authenticatedUser = [KiiAnyAuthenticatedUser aclSubject];
KiiACLEntry *entry = [KiiACLEntry entryWithSubject:authenticatedUser
                                         andAction:KiiACLTopicActionSubscribe];
[acl putACLEntry:entry];

// Scenario #2b:
// Disallow a user to send push message.
KiiUser* user = [KiiUser findUserByUsernameSynchronous:@"_I_am_a_supervisor_"
                                             withError:&error];
KiiACLEntry *entry = [KiiACLEntry entryWithSubject:user
                                         andAction:KiiACLTopicActionSubscribe];
[acl putACLEntry:entry];
KiiACLEntry *entry = [KiiACLEntry entryWithSubject:user
                                         andAction:KiiACLTopicActionSend];
[acl putACLEntry:entry];

// Reflect all ACL entries.
NSArray *succeeded, *failed;
[acl saveSynchronous:&error
          didSucceed:&succeeded
             didFail:&failed];
if (error != nil) {
  // Please check error to see what went wrong... 
}
```

Here is a brief explanation of what is happening in the snippet.

1. Create an ACL handler by invoking `topicAcl` method.
1. Invoke `KiiACLEntry` method to create an ACL entry.
    * For Scenario #2a, we are using an instance generated by
      `kiiAnyAuthenticatedUser` method as a Subject and
      `KiiACLTopicActionSubscribe` as an action so as to grant all
      authenticated users the permission to subscribe to the topic.
    * For Scenario #2b, we are setting the target user as a Subject and both
      `KiiACLTopicActionSubscribe` and `KiiACLTopicActionSend` as actions so as
      to grant this user the permission to subscribe and send messages to the
      topic.

1. Invoke `putACLEntry` method to locally save each ACL entry.
1. Invoke `save` method to save the ACL entries to Kii Cloud.

The next snippet shows how you can set ACL entries for Scenario #3a.

```objc
NSError *error;

// Instantiate the already-existing user-scope topic.
KiiUser* user = [KiiUser currentUser];
NSString *topicname = @"MyTODO";
KiiTopic *topic = [user topicWithName:topicname];

// Scenario #3a:
// Allow group members to subscribe.
NSString *groupname = @"MyFamily";
KiiGroup *group = [KiiGroup groupWithName:groupname];
KiiACLEntry *entry = [KiiACLEntry entryWithSubject:group
                                         andAction:KiiACLTopicActionSubscribe];
[acl putACLEntry:entry];

// Reflect all ACL entries.
NSArray *succeeded, *failed;
[acl saveSynchronous:&error
          didSucceed:&succeeded
             didFail:&failed];
if (error != nil) {
  // Please check error to see what went wrong... 
} 
```

The basic operations are the same as that of the previous snippet.  In this
snippet we are specifying a group as an ACL's subject so as to grant the
permission to the group members.

